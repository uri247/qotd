CMAKE_MINIMUM_REQUIRED( VERSION 3.1 )

PROJECT(qotd VERSION 0.2  LANGUAGES CXX)

SET( CMAKE_CXX_STANDARD 11 )
SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -pedantic" )

FIND_PACKAGE( Threads REQUIRED )

SET(COMMON_SRC Server.cpp Server.h ClientSocket.cpp ClientSocket.h)
SET(QOTD_SRC qotd.cpp)
SET(ECHO_SRC echo.cpp)


ADD_EXECUTABLE(echo ${COMMON_SRC} ${ECHO_SRC})
TARGET_LINK_LIBRARIES( echo ${CMAKE_THREAD_LIBS_INIT} )


ADD_EXECUTABLE(qotd ${COMMON_SRC} ${QOTD_SRC})
TARGET_LINK_LIBRARIES( qotd ${CMAKE_THREAD_LIBS_INIT} )
ADD_CUSTOM_COMMAND(TARGET qotd POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/Quotes.txt ${CMAKE_CURRENT_BINARY_DIR})

install(TARGETS echo qotd RUNTIME DESTINATION .)
install(FILES Quotes.txt DESTINATION .)

CONFIGURE_FILE(Dockerfile ${CMAKE_CURRENT_BINARY_DIR}/Dockerfile COPYONLY)
ADD_CUSTOM_TARGET(image
    COMMAND docker build --tag ${CMAKE_PROJECT_NAME} .
)